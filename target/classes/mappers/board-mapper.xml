<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : 주로 dao 클래스의 sqlSession과 연결하기 위한 키로 사용 -->
<mapper namespace="web.spring.skintalk.BoardMapper">
	
	<!-- DB Query 작성 -->
	<!-- id : 주로 dao 클래스의 sqlSession의 함수와 연결하기 위해 사용 -->
	
	<!-- 
	${컬럼이름} : mybatis-config.xml의 property의 name과 매칭. DB테이블의 컬럼
	#{컬럼이름} : dao 클래스의 sqlSession에서 전송받은 데이터(입력받은 데이터)
	-->
	 
	<!-- 
	mapper 태그
	<insert>, <select>, <update>, <delete>
	sqlSession의 함수(insert, selectOne, selectList, update, delete)에 맞게 수행되는 태그
	 -->
	 
	<insert id="insert">
		insert into ${board} (${boardTitle}, ${boardContent}, ${userId})
		values (#{boardTitle}, #{boardContent}, #{userId})
	</insert>
	<!-- 
		resultType : select 를 했을때 리턴하는 레코드 타입 선언
		- 일반적으로 패키지 이름을 포함한 전체 경로의 클래스 이름을 사용해야 함
		- mybatis-config.xml에서 typeAliases 속성을 package로 정의하여 클래스 이름만 사용
	 -->
	<select id="select_all" resultType="BoardVO">
		select * from ${board} order by ${boardNo} desc
	</select>
	
	<select id="select_by_boardNo" resultType="BoardVO">
		select * from ${board} where ${boardNo}=#{boardNo}
	</select>
	
	<update id="update">
		update ${board} set ${boardTitle}=#{boardTitle}, ${boardContent}=#{boardContent} where ${boardNo}=#{boardNo}
	</update>
	
	<delete id="delete">
		delete from ${board} where ${boardNo}=#{boardNo}
	</delete>

	<select id="select_pageCriteria" resultType="BoardVO">
		select b.${boardNo}, b.${boardTitle}, b.${boardContent}, b.${userId}, b.${boardCdate} from (
			select rownum as rn, a.* from (
				select * from ${board} order by ${boardNo} desc)a
			)b 
		where rn between #{start} and #{end}
	</select>
	
	<!--
		#{start} : getStart()
		#{end} : getEnd()
	 -->

	<select id="select_TotalNums" resultType="Integer">
		select count(*) total_cnt from ${board}
	</select>
	
	<select id="select_by_userId" resultType="BoardVO">
		select * from ${board} where ${userId} like #{userId}
	</select>
	
	<select id="select_by_keyword" resultType="BoardVO">
		select * from ${board} 
		where ${boardTitle} like #{keyword} or ${boardContent} like #{keyword} 
		order by ${boardNo} desc
	</select>
	
</mapper>